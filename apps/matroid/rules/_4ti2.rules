# @category Combinatorics
# Calculate the circuits of a set of points given as the rows of a Matrix A.
# The circuits are given as a matrix such that vA=0 for all rows v.
# @param Matrix A Matrix containing the points as rows.
# @return Matrix
user_function _4ti2CircuitsWithReduction(Matrix, Matrix){
   my($B, $facetValues) = @_;
   my $A = transpose(new Matrix($B));
   my $tempname = new Tempfile;
   open(my $filePipe, ">".$tempname.".mat");
   print $filePipe $A->rows." ".$A->cols."\n";
   print $filePipe dense($A);
   close($filePipe);
   
   if ($Verbose::external) {
      dbg_print( "running 4ti2: $circuits -q $tempname" );
   }
   system("$circuits -q $tempname".(!$DebugLevel && " >/dev/null 2>&1"))
      and die "couldn't run 4ti2: $circuits -q $tempname.mat\n";

   print "4ti2 done.\n";
   
   open(my $outfile, "<$tempname.cir")
      or die "can't open output file $tempname.cir: $!";
   

   my $dimline = <$outfile>;
   
   my $preprocessor = new Preprocessor(100,new Matrix<Integer>($facetValues));
	local $_;
   while (<$outfile>) {
       my $vec = new SparseVector<Integer>($_);
       $preprocessor->add($vec);
       # Add to result object.
   }
   close $outfile;
   print "Preprocessor done.\n";
   return $preprocessor;
}

